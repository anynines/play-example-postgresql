h1. play-example-postgresql

This application uses the play framework and PostgreSQL as underlying database service. Follow the instructions below to deploy it to your anynines space.

h2. Deployment on Anynines V2

> play dist

> cf push --path dist/computer-database-1.0.zip

Name> cdatabase

Instances> 1

Custom startup command> none

1: 64M
2: 128M
3: 256M
4: 512M
5: 1G
Memory Limit> 256M

Creating cdatabase... OK

1: cdatabase
2: none
Subdomain> cdatabase

1: de.a9sapp.eu
2: none
Domain> de.a9sapp.eu

Binding cdatabase.de.a9sapp.eu to cdatabase... OK

Create services for application?> y

1: mongodb 2.0
2: mysql 5.5
3: postgresql 9.0
4: rabbitmq 2.8
5: redis 2.2
What kind?> 3

Name?> postgresql-84e11

1: 100: Shared server, shared VM, 1MB memory, 10MB storage, 10
connections
Which plan?> 1

Creating service postgresql-84e11... OK
Binding postgresql-84e11 to cdatabase... OK
Create another service?> n

Bind other services to application?> n

Save configuration?> n

Uploading cdatabase... OK
Starting cdatabase... OK
-----> Downloaded app package (31M)
Installing java.
Downloading JDK...
Copying openjdk-1.7.0_21.tar.gz from the buildpack cache ...
Unpacking JDK to .jdk
Copying mysql-connector-java-5.1.12.jar from the buildpack cache ...
Copying postgresql-9.0-801.jdbc4.jar from the buildpack cache ...
Copying auto-reconfiguration-0.6.6.jar from the buildpack cache ...
-----> Uploading staged droplet (132M)
-----> Uploaded droplet
Checking cdatabase...
Staging in progress...
Staging in progress...
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  0/1 instances: 1 starting
  1/1 instances: 1 running
OK

> cf apps
Getting applications in development... OK

name        status    usage      url
caldecott   running   1 x 128M   caldecott-4dc80.de.a9sapp.eu
cdatabase   running   1 x 256M   cdatabase.de.a9sapp.eu
notes       running   1 x 256M   notes.de.a9sapp.eu

